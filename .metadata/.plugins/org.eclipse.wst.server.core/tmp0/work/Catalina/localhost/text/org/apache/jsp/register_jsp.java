/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.81
 * Generated at: 2017-11-08 01:37:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>注册</title>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("    <script language=\"javascript\">               //脚本      \r\n");
      out.write("   //该函数功能：去掉字符串前后空格\r\n");
      out.write("     function  YZ(str){                                   \r\n");
      out.write("    return str.replace(/(^\\s*)|(\\s*$)/g,\"\");\r\n");
      out.write("     }\r\n");
      out.write("  \r\n");
      out.write("   //该函数功能：检验是否可以注册成功      \r\n");
      out.write("     function check(){       \r\n");
      out.write("    \t if( YZ(form.id.value)==\"\"){               //无输入或者输入空格键会提示账号不能为空\r\n");
      out.write("    \t      alert(\"账号不能为空！\");\r\n");
      out.write("    \t      form.id.focus();\r\n");
      out.write("    \t      return false;\r\n");
      out.write("    \t        }\r\n");
      out.write("     if( YZ(form.username.value)==\"\"){               //无输入或者输入空格键会提示用户名不能为空\r\n");
      out.write("      alert(\"用户名不能为空！\");\r\n");
      out.write("      form.username.focus();\r\n");
      out.write("      return false;\r\n");
      out.write("        }\r\n");
      out.write("    if( YZ(form.password.value)==\"\"){                  //无输入会提示输入密码\r\n");
      out.write("   alert(\"请输入密码！\");\r\n");
      out.write("   form.password.focus();\r\n");
      out.write("   return false;\r\n");
      out.write("    }\r\n");
      out.write("    if( YZ(form.tel.value)==\"\"){                      //无输入会提示输入电话\r\n");
      out.write("    alert(\"请输入电话！\");\r\n");
      out.write("    form.tel.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("      }\r\n");
      out.write("        var reg =/^(1\\d{10})$/;                                  //手机校验，必须以1开头的11位数字\r\n");
      out.write("        if((form.tel.value !=\"\" )&&(!form.tel.value.match(reg))){\r\n");
      out.write("        alert(\"电话格式错误！检查后重新输入\");\r\n");
      out.write("    form.tel.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("     }\r\n");
      out.write("        \r\n");
      out.write("    if( YZ(form.email.value)==\"\"){                      //无输入会提示输入邮箱\r\n");
      out.write("     alert(\"请输入邮箱！\");\r\n");
      out.write("     form.email.focus();\r\n");
      out.write("     return false;\r\n");
      out.write("      }\r\n");
      out.write("     var regm =/^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;   //邮箱格式校验,开头必须为字母,下划线,数字,\r\n");
      out.write("        if((form.email.value !=\"\" )&&(!form.email.value.match(regm))){\r\n");
      out.write("         alert(\"邮箱格式错误！检查后重新输入\");\r\n");
      out.write("     form.email.focus();\r\n");
      out.write("     return false;\r\n");
      out.write("        }\r\n");
      out.write("        if( YZ(form.companyname.value)==\"\"){              //无输入会提示输入公司名\r\n");
      out.write("         alert(\"请输入公司名！\");\r\n");
      out.write("         form.companyname.focus();\r\n");
      out.write("         return false;\r\n");
      out.write("      }       \r\n");
      out.write("        if( YZ(form.companyaddress.value)==\"\"){           //无输入会提示输入公司地址\r\n");
      out.write("          alert(\"请输入公司地址！\");\r\n");
      out.write("          form.companyaddress.focus();\r\n");
      out.write("          return false;\r\n");
      out.write("       }   \r\n");
      out.write("     else\r\n");
      out.write("    \t// alert(\"恭喜您，注册成功！\");\r\n");
      out.write("       return true;\r\n");
      out.write("     }\r\n");
      out.write("   </script>\r\n");
      out.write("<body>\r\n");
      out.write("    \r\n");
      out.write("  <center><h1>注册页面</h1>\r\n");
      out.write("<!--  --><h2>建议您用手机号后4位当做账号，以防账号重复出错！</h2>\r\n");
      out.write("   <form name=\"form\" action=\"registerHandler.jsp\" method=\"get\">\r\n");
      out.write("    \r\n");
      out.write("<table>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>账号</td>\r\n");
      out.write("<td><input type=\"text\" name=\"id\"></td>\r\n");
      out.write("<td><font color=\"red\">*</font> </td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>用户名：</td>\r\n");
      out.write("<td><input type=\"text\" name=\"username\"></td>\r\n");
      out.write("<td><font color=\"red\">*</font> </td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>全名：</td> <td><input type=\"text\" name=\"fullname\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>密码：</td> <td><input type=\"password\" name=\"password\"></td>\r\n");
      out.write("<td><font color=\"red\">*</font> </td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>电话：</td> <td><input type=\"text\" name=\"tel\"></td>\r\n");
      out.write("<td><font color=\"red\">*</font> </td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>邮箱：</td> <td><input type=\"text\" name=\"email\"></td>\r\n");
      out.write("<td><font color=\"red\">*</font> </td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>国家：</td>\r\n");
      out.write("<td><input type=\"text\" name=\"country\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>城市：</td> <td><input type=\"text\" name=\"city\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>邮编：</td> <td><input type=\"text\" name=\"zip\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>公司名：</td> <td><input type=\"text\" name=\"companyname\"></td>\r\n");
      out.write("<td><font color=\"red\">*</font> </td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>公司地址：</td> <td><input type=\"text\" name=\"companyaddress\"></td>\r\n");
      out.write("<td><font color=\"red\">*</font> </td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>工作：</td> <td><input type=\"text\" name=\"job\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>职称:</td> <td><input type=\"text\" name=\"title\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td> <input type=\"submit\" value=\"注册\" onclick=\"return check()\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("   \r\n");
      out.write("  </form>\r\n");
      out.write(" </center>\r\n");
      out.write(" \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
